// Alice Yang
// CIS 660 Homework 2
// This is the GUI code for the LSystem maya plug-in

// git status -uno (--untracked-files=no)
// git commit -m "commit message" -a
// git push origin master
// git log origin/master..HEAD


//------------------------------------------------------------
// Global variables to keep track of LSystemCmd input values
//------------------------------------------------------------
global string $grammarPath;
global string $grammar;
global string $grammarScrollField;
global string $iterationSlider;
global string $stepSizeSlider;
global string $angleSlider;
global int $developing = true; // Set to false when ready to release

//------------------------------------------------------------
// Creates the main window LSystem menu
//------------------------------------------------------------
global proc createLSystemUI()
{
    global int $developing;
    if ($developing && `menu -exists LSystemMenu`)
        deleteUI LSystemMenu;
    if (!`menu -exists LSystemMenu`)
    {
        global string $gMainWindow;
        setParent $gMainWindow;
        menu -label "LSystem" LSystemMenu;
            menuItem -label "Call LSystem Command" -command displayLSystemDialog;
            menuItem -divider true;
            menuItem -label "Create LSystem Node" -command sphere;      
    }
}

//------------------------------------------------------------
// Displays the popup GUI dialog
//------------------------------------------------------------
global proc displayLSystemDialog()
{
    global int $developing;
    global string $grammarScrollField;
    
    if ($developing && `window -exists myWindow`)
        deleteUI myWindow;
    if (!`window -exists myWindow`)
        window -widthHeight 500 300 -title "Call LSystem Command" myWindow;
    
    columnLayout -adjustableColumn true;          
        string $formBrowse = `formLayout -numberOfDivisions 100`;
            string $bBrowse = `button -command openFileDialog -label "Browse..."`;
            string $tBrowse = `text -font boldLabelFont -label "Browse for grammar files"`;
            formLayout -edit
                -attachForm $tBrowse "left" 0
                -attachForm $bBrowse "right" 0
                $formBrowse;
            setParent ..;
        $grammarScrollField = `scrollField -wordWrap off -height 150 -text "Grammar displayed here..."`;
        setParent ..;
        
    global string $iterationSlider;
    global string $stepSizeSlider;
    global string $angleSlider;
    
    frameLayout -label "LSystem Parameters";
    $iterationSlider = `intSliderGrp -label "Iterations" -field true`;
    $stepSizeSlider = `floatSliderGrp -label "Default step size" -field true`;
    $angleSlider = `floatSliderGrp -label "Default angle" -field true`;
    setParent ..;
    
    string $formConfirm = `formLayout -numberOfDivisions 100`;
    string $bCreate = `button -label "Create" -command callLSystemCmd`;
    string $bCancel = `button -label "Cancel" -command deleteLSystemUI`;
    formLayout -edit
        -attachForm $bCreate "left" 0
        -attachForm $bCancel "right" 0
        $formConfirm;
    
    showWindow myWindow;
}

//-------------------------------------------------------------
// Calls LSystemCmd with argument values taken from the sliders
//-------------------------------------------------------------
global proc callLSystemCmd()
{
    global string $iterationSlider;
    global string $stepSizeSlider;
    global string $angleSlider;
    global string $grammar;
    
    int $i = `intSliderGrp -q -v $iterationSlider`;
    float $ss = `floatSliderGrp -q -v $stepSizeSlider`;
    float $a = `floatSliderGrp -q -v $angleSlider`;
    
    print ("INFO: " + "iteration = " + $i + " stepSize = " + $ss + " angle = " + $a + " grammar = " + $grammar + "\n");
    LSystemCmd -ss $ss -i $i -a $a -g $grammar;
}

//--------------------------------------------------------------
// Sets the grammar file path and displays the text file
//--------------------------------------------------------------
global proc openFileDialog()
{
    global string $grammarPath;
    global string $grammar;
    global string $grammarScrollField;
    
    $grammarPath = `fileDialog -directoryMask "*.txt"`;
    print ("INFO: $grammarPath = " + $grammarPath + "\n");
    
    $file = `fopen $grammarPath "r"`;
    $grammar = `fread $file $grammar`;
    scrollField -edit -text $grammar $grammarScrollField;
    fclose $file;
}

//------------------------------------------------------------
// Deletes the GUI dialog
//------------------------------------------------------------
global proc deleteLSystemUI()
{
    if (`window -exists myWindow`)
        deleteUI myWindow;
}
